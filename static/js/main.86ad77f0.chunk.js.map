{"version":3,"sources":["Store/context.js","Products/oneProduct.js","Products/Links.js","Products/Products.js","Cart/SingleCart.js","Cart/Cart.js","App/App.js","serviceWorker.js","Store/useGlobalState.js","index.js"],"names":["Context","createContext","Product","id","src","name","price","useContext","state","actions","send","count","useEffect","sessionStorage","setItem","JSON","stringify","cart","onClick","productAlreadyInCart","filter","p","length","type","payload","cartWithoutProduct","updatingCount","className","products","Products","useState","setFilter","sort","a","b","onChange","e","target","value","map","key","SingleCartItem","hidden","getItem","clear","Cart","emptyCartShow","emptyCartMessage","localState","setCartShow","cartShow","cartMessage","cartProducts","setCartProducts","productsInCartState","parse","sum","i","undefined","SingleCart","App","Component","Boolean","window","location","hostname","match","useGlobalState","setState","action","ReactDOM","render","store","Provider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.86ad77f0.chunk.js","sourcesContent":["import {createContext} from \"react\";\n\nconst Context = createContext({});\n\nexport default Context;","import React, {useContext,useEffect} from \"react\";\nimport Context from \"../Store/context\";\n\nlet Product= ({id, src, name, price}) =>  {\n\n        const{state, actions} = useContext(Context);\n        const send = {id:id, src:src, name:name, price:price, count:1};\n\n        const addToGlobalState= () => {\n            const productAlreadyInCart = state.cart.filter(p => p.id === id);\n            if (productAlreadyInCart.length === 0) {\n                actions({type: 'setState', payload: {cart: [...state.cart, send]}});\n\n            } else {\n                const cartWithoutProduct = state.cart.filter(p=> p.id !== id);\n                const updatingCount = {\n                        ...productAlreadyInCart[0],\n                        count: productAlreadyInCart[0].count +1,\n                };\n                        actions({type:'setState', payload:{cart:[...cartWithoutProduct, updatingCount]}})\n\n            }\n        };\n\n    useEffect(()=>{\n        sessionStorage.setItem('cart', JSON.stringify(state.cart));\n    })\n\n        return(\n            <div>\n                    <img src={src}/>\n                    <p>{name}</p>\n                    <p>{price} z≈Ç</p>\n                    <button onClick={addToGlobalState} className='myButton'>Dodaj do koszyka</button>\n            </div>\n        )\n}\nexport default Product","const products=[\n    {\n        id:1,\n        src:'https://mosaic03.ztat.net/vgs/media/packshot/catalog-lg/DC/11/2O/00/VQ/11/DC112O00V-Q11@1.1.jpg',\n        name:'DC Shoes TRASE',\n        price:188.00\n    },\n    {\n        id:2,\n        src: 'https://mosaic04.ztat.net/vgs/media/packshot/catalog-lg/DC/11/5O/00/UA/11/DC115O00U-A11@2.jpg',\n        name:'DC Shoes LEGACY',\n        price:549.00\n    },\n    {\n        id:3,\n        src:'https://mosaic03.ztat.net/vgs/media/packshot/catalog-lg/DC/11/5O/00/QC/11/DC115O00Q-C11@11.jpg',\n        name:'DC Shoes PENZA',\n        price:289.00\n    },\n    {\n        id:4,\n        src:'https://mosaic04.ztat.net/vgs/media/packshot/catalog-lg/DC/11/5N/00/6A/11/DC115N006-A11@6.jpg',\n        name:'DC Shoes PENSFORD SE',\n        price:449.00\n    },\n    {\n        id:5,\n        src:'https://mosaic03.ztat.net/vgs/media/packshot/catalog-lg/DC/11/5O/00/RQ/11/DC115O00R-Q11@2.jpg',\n        name:'DC Shoes STACK',\n        price:349.00\n    },\n    {\n        id:6,\n        src:'https://mosaic04.ztat.net/vgs/media/packshot/catalog-lg/DC/11/5N/00/2Q/12/DC115N002-Q12@4.jpg',\n        name:'DC Shoes PURE TOP SE',\n        price:314.00\n    },\n    {\n        id:7,\n        src:'https://mosaic03.ztat.net/vgs/media/packshot/catalog-lg/DC/11/5O/00/WT/11/DC115O00W-T11@11.jpg',\n        name:'DC Shoes LEGACY ',\n        price:188.00\n    },\n    {\n        id:8,\n        src:'https://mosaic04.ztat.net/vgs/media/packshot/catalog-lg/DC/11/2B/02/DQ/11/DC112B02D-Q11@12.jpg',\n        name:'DC Shoes TRASE',\n        price:199.00\n    },\n]\nexport default products;","import React,{useState} from 'react'\nimport '../Products/Products.scss'\nimport Product from \"./oneProduct\";\nimport products from '../Products/Links'\n\nconst Products = () =>{\n        const [filter, setFilter] = useState('Name');\n\n        const filterByPrice = () =>{\n             return   products.sort((a,b)=> a.price-b.price )\n        }\n\n        const filterByName = () =>{\n                return products.sort((a,b)=>{\n                        if(a.name>b.name){return 1}\n                        if(b.name>a.name){return -1}\n                        return 0\n                });\n}\n        const handleChange = (e) =>{\n                setFilter(e.target.value)\n        }\n\n        if(filter === 'Name'){\n                filterByName()\n        }else{\n                filterByPrice()\n        }\n\n        return(\n            <div className='products'>\n                <h2>Produkty</h2>\n                <select onChange={handleChange}>\n                        <option value=\"Name\">Name</option>\n                        <option value=\"Price\">Price</option>\n                </select>\n                <div>\n                    {products.map(e => <Product key={e.id} {...e} />)}\n                </div>\n            </div>\n        )\n}\nexport default Products","import React,{useContext, useEffect} from 'react';\nimport Context from \"../Store/context\";\n\n\n\nconst SingleCartItem=({hidden,id,src, name, price, count})=> {\n\n    const{state, actions} = useContext(Context);\n    const productAlreadyInCart = state.cart.filter(p => p.id === id);\n    const cartWithoutProduct = state.cart.filter(p=> p.id !== id);\n\n    const addCount = () => {\n        const updatingCount = {\n            ...productAlreadyInCart[0],\n            count: productAlreadyInCart[0].count +1,\n        };\n        actions({type:'setState', payload:{cart:[...cartWithoutProduct, updatingCount]}})\n        actions({type:'setState', payload:{cart:[...cartWithoutProduct, updatingCount]}})\n    };\n\n    const reduceCount = () => {\n        const updatingCount = {\n            ...productAlreadyInCart[0],\n            count: productAlreadyInCart[0].count -1,\n        };\n        if(updatingCount.count>0) {\n            actions({type: 'setState', payload: {cart: [...cartWithoutProduct, updatingCount]}});\n        }else{\n            actions({type: 'setState', payload: {cart: [...cartWithoutProduct]}});\n        }\n\n\n    };\n    useEffect(()=>{\n        if(state.cart.length === 1 && sessionStorage.getItem('cart').length === 2){\n            sessionStorage.clear()\n        }\n    })\n    if(count>0){\n    return(\n            <div hidden={hidden}>\n                <div>\n                    <img src={src}/>\n                    <p>{name}</p>\n                    <span>{count}</span>\n                    <div>\n                        <button onClick={addCount}>+</button>\n                        <button onClick={reduceCount}>-</button>\n                    </div>\n                    <p>{price*count} z≈Ç</p>\n                </div>\n            </div>\n        )}else{\n        return null\n    }\n}\nexport default SingleCartItem;","import React, {useContext, useState} from 'react'\nimport './Cart.scss'\nimport '../Products/Products'\nimport Context from '../Store/context'\nimport SingleCartItem from './SingleCart'\nconst Cart= () => {\n    const {state, actions} = useContext(Context);\n    const [localState, setCartShow] = useState({emptyCartShow:true,emptyCartMessage:'Rozwi≈Ñ koszyk' })\n    const [cartProducts, setCartProducts] = useState({cartShow:false, cartMessage:'Ukryj koszyk'})\n    let productsInCartState = state.cart;\n\n    if(sessionStorage.getItem('cart') !==null && state.cart.length === 0 && JSON.parse(sessionStorage.getItem('cart')).length > 1){\n        productsInCartState = JSON.parse(sessionStorage.getItem('cart'));\n        actions({type:'setState', payload:{cart:productsInCartState}});\n    }\n\n    const showEmptyCart = () =>{\n        if(localState.emptyCartShow === false) {\n            setCartShow({emptyCartShow:true, emptyCartMessage: 'Rozwi≈Ñ koszyk'})\n        }else{\n            setCartShow({emptyCartShow:false, emptyCartMessage:'Ukryj koszyk'})\n        }};\n    const showCart = () =>{\n        if(cartProducts.cartShow === false){\n            setCartProducts({cartShow:true, cartMessage:'Rozwi≈Ñ koszyk'})\n        }else{\n            setCartProducts({cartShow:false, cartMessage:'Ukryj koszyk'})\n        }\n    }\n\n    let sum = 0;\n    for(let i=0;i<state.cart.length;i++){\n        sum += state.cart[i].price * state.cart[i].count\n    }\n\n    if(productsInCartState[0] === undefined || productsInCartState[0].count === 0){\n    return(\n        <div className='cart'>\n            <h2>Koszyk</h2>\n            <button onClick={showEmptyCart} className='myButton'>{localState.emptyCartMessage}</button>\n            <h4 hidden={localState.emptyCartShow}>koszyk jest pusty</h4>\n        </div>\n    )}else{\n        return(\n            <div className='cart'>\n                <p>Koszyk</p>\n                <button onClick={showCart} className='myButton'>{cartProducts.cartMessage}</button>\n                {productsInCartState.map(e=><SingleCartItem hidden={cartProducts.cartShow} key={e.id} {...e}/>)}\n                <h4 hidden={cartProducts.cartShow}>Suma:{sum} z≈Ç</h4>\n            </div>\n        )\n\n    }\n\n\n}\n\nexport default Cart;\n","import React,{Component} from 'react';\nimport './App.scss';\nimport Cart from '../Cart/Cart'\nimport Products from'../Products/Products'\nclass App extends Component {\n    render() {\n        return (\n            <>\n                <Cart/>\n                <Products/>\n            </>\n        );\n    }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {useState} from 'react'\n\nconst useGlobalState = () => {\n    const [state, setState] = useState({cart:[]});\n\n    const actions = (action) => {\n        const {type, payload} = action;\n        if (type === 'setState') {\n            return setState(payload);\n        } else {\n            return state;\n        }\n    };\n    return {state, actions}\n};\nexport default useGlobalState;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport useGlobalState from './Store/useGlobalState';\nimport Context from './Store/context'\n\nconst Index = () =>{\n    const store = useGlobalState();\n    return(\n        <Context.Provider value={store}>\n            <App/>\n        </Context.Provider>\n    )\n}\n\nReactDOM.render(<Index />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}